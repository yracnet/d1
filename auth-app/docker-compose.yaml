version: "3.8"

services:
  auth-ui:
    container_name: auth-ui
    image: yracnet/auth-ui:latest
    depends_on:
      - auth-permiso
      - auth-usuario
    ports:
      - "8080:80"
    volumes:
      - ./provider.json:/site/provider.json
    networks:
      - public

  auth-permiso:
    container_name: auth-permiso
    image: rimberth/auth-permiso:latest
    depends_on:
      - db
    ports:
      - "8081:8081"
    environment:
      - JDBC_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - JDBC_USER=${POSTGRES_USER}
      - JDBC_PASWD=${POSTGRES_PASSWORD}
    networks:
      - public
      - private

  auth-usuario:
    container_name: auth-usuario
    image: rimberth/auth-usuario:latest
    depends_on:
      - db
    ports:
      - "8082:8082"
    environment:
      - JDBC_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - JDBC_USER=${POSTGRES_USER}
      - JDBC_PASWD=${POSTGRES_PASSWORD}
    networks:
      - public
      - private

  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - private

networks:
  public:
    driver: bridge
  private:

volumes:
  data:
    driver: local